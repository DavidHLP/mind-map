{"layout":"logicalStructure","root":{"data":{"text":"<p>MyBatis中#{}和${}的区别是什么?</p>","expand":true,"uid":"02cbeee0-c898-4eaa-9452-07bae8e4beb2","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>#{} (PreparedStatement 占位符)</p>","uid":"2aeeccfb-76ab-45ba-9e30-87067951acdb","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>#{}是 PreparedStatement 占位符，会对传入的 SQL 查询语句参数<strong>做类型处理</strong>，借助<strong> PreparedStatement</strong> 进行 SQL 绑定，能避免 SQL 注入攻击，是<strong>把参数作为参数传递给数据库查询</strong>，而非直接拼接进 SQL 里。</p>","uid":"12b5bb36-675f-4fcd-99bc-cd8e8108a1d2","expand":true,"richText":true,"isActive":false,"note":"PreparedStatement 预编译可类比餐馆预先备好固定菜单，只需顾客告知菜品数量、是否加辣等细节即可高效服务。对应到数据库中，是事先编译优化好 SQL 模板，后续执行相同 SQL 无需再解析优化，通过占位符（?）传递参数值。\n\n其优点一是更高效，SQL 语句仅编译一次，后续执行相同 SQL 直接复用执行计划；二是更安全，参数以绑定方式传递，能避免 SQL 注入漏洞。"},"children":[]}]},{"data":{"text":"<p>${} (字符串拼接)</p>","uid":"4d217ac6-0f2a-4133-97b1-2a8803554aa9","expand":true,"richText":true,"isActive":false},"children":[{"data":{"text":"<p>${}是字符串拼接方式，直接把参数值拼接到 SQL 语句中，不做类型处理，也不使用 PreparedStatement。</p>","uid":"c3318d78-ebec-4605-9d42-a31182600e44","expand":true,"richText":true,"isActive":false,"note":"在 MyBatis 里，当需要动态指定表名、列名，或者进行动态排序等预编译无法满足的场景时，只能用 `${}`。\n\n### 动态指定列名示例\n```xml\n<select id=\"selectByColumn\" resultType=\"User\">\n  SELECT * FROM users WHERE ${column} = #{value}\n</select>\n```\n这里通过 `${column}` 动态指定查询的列名，`#{value}` 是该列对应的值（用 `#{}` 防止 SQL 注入）。\n\n### 动态排序示例\n```xml\n<select id=\"selectAllUsers\" resultType=\"User\">\n  SELECT * FROM users ORDER BY ${orderByColumn} ${orderByType}\n</select>\n```\n通过 `${orderByColumn}` 动态指定排序的列，`${orderByType}` 动态指定排序方式（升序或降序等）。"},"children":[]}]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic4","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-1096,"translateY":-26,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-1096,"f":-26},"state":{"scale":1,"x":-1096,"y":-26,"sx":-1430,"sy":-73}}}