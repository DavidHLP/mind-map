{"layout":"logicalStructure","root":{"data":{"text":"<p>MySQL 默认的事务隔离级别是什么?为什么选择这个级别?</p>","expand":true,"uid":"a4e01ad5-9521-4cba-93a8-13c4fcaaf2f8","richText":true,"isActive":false,"imgMap":{}},"children":[{"data":{"text":"<p>MySQL默认的隔离级别是可重复读(Repeatable Read)，即 RR</p>","uid":"4485ca29-5a9e-43b9-a98e-dc8453188eeb","expand":true,"richText":true,"isActive":false},"children":[]},{"data":{"text":"<p>为兼容早期 binlog 的 statement 格式，需规避特定隔离级别使用：若数据库采用读已提交或读未提交隔离级别，搭配 statement 格式 binlog 时，会引发主从（备）数据库数据不一致问题。</p>","uid":"37619a10-3ba2-4884-b879-3dd38a5a32b0","expand":true,"richText":true,"isActive":false,"note":"# 隔离级别与binlog格式对主从一致性的影响总结\n\n1. **核心概念**：\n    * **binlog**：主库记录数据变更的日志，从库靠其同步数据；`statement`格式记录SQL语句本身，依赖执行环境一致。\n    * **事务隔离级别**：控制事务间数据可见性，读未提交（RU）/读已提交（RC）易受其他事务提交影响，可重复读（RR）/串行化能保证执行时数据视野稳定（RR用快照读，串行化强制事务串行）。\n2. **不兼容根源**：`statement`格式需主从执行SQL的“数据环境完全一致”，但RU/RC隔离级别下，主从执行同一条SQL时，可能因其他事务提交看到不同数据，导致结果不一致（如主库查sum时事务未提交，从库同步时事务已提交，结果不同）。\n3. **高隔离级别兼容原因**：RR通过“一致性快照”确保读取不受其他事务提交影响，串行化强制事务串行执行，均能保证主从执行环境一致，避免结果差异。\n4. **结论与建议**：`statement`格式因依赖执行环境，仅兼容RR/Serializable；现代数据库推荐`row`格式binlog（记录修改的数据行），从根本上规避该问题，无需严格限制隔离级别。"},"children":[]}],"smmVersion":"0.14.0-fix.1"},"theme":{"template":"classic15","config":{}},"view":{"transform":{"scaleX":1,"scaleY":1,"shear":0,"rotate":0,"translateX":-822,"translateY":-94,"originX":0,"originY":0,"a":1,"b":0,"c":0,"d":1,"e":-822,"f":-94},"state":{"scale":1,"x":-822,"y":-94,"sx":-822,"sy":-94}}}